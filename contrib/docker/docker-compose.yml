# docker-compose build && docker-compose up -d
# If "docker-compose logs ckan" shows DB not ready, run "docker-compose restart ckan" a few times.
version: "3"

volumes:
  ckan_config:
  ckan_home:
  ckan_storage:
  pg_data:

services:
  ckan:
    container_name: ckan
    build:
      context: ../../
      args:
          - CKAN_SITE_URL=${CKAN_SITE_URL}:${CKAN_PORT}
    links:
      - db
      - solr
      - redis
    ports:
      - "0.0.0.0:${CKAN_PORT}:5000"
    environment:
      - CKAN_SQLALCHEMY_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/ckan
      - CKAN_SITE_URL=${CKAN_SITE_URL}
      - DB_PORT_5432_TCP_ADDR=db
      - DB_PORT_5432_TCP_PORT=${POSTGRES_PORT}
      - SOLR_PORT_8983_TCP_ADDR=solr
      - SOLR_PORT_8983_TCP_PORT=8983
      - REDIS_PORT_6379_TCP_ADDR=redis
      - REDIS_PORT_6379_TCP_PORT=6379
    volumes:
      - ckan_config:/etc/ckan/default
      - ckan_home:/usr/lib/ckan/default
      - ckan_storage:/var/lib/ckan

  db:
    container_name: db
    build:
      context: postgresql/
      args:
        - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    environment:
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
        #- ./00_create_datastore.sh:/docker-entrypoint-initdb.d/00_create_datastore.sh

  solr:
    container_name: solr
    image: ckan/solr:latest

  redis:
    container_name: redis
    image: redis:latest
