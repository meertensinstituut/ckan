machine:

    environment:
        PIP_USE_MIRRORS: true
        CKAN_POSTGRES_DB: ckan_test
        CKAN_POSTGRES_USER: ckan_default
        CKAN_POSTGRES_PWD: pass
        CKAN_DATASTORE_POSTGRES_DB: datastore_test
        CKAN_DATASTORE_POSTGRES_WRITE_USER: ckan_default
        CKAN_DATASTORE_POSTGRES_READ_USER: datastore_default
        CKAN_DATASTORE_POSTGRES_READ_PWD: pass
        SOLR_HOME: $HOME/solr

    node:
        version: 0.10.33

    services:
        - docker

dependencies:

    pre:
        - "[ -e ~/.local/bin/circleci-matrix ]
           || mkdir -p ~/.local/bin
           && curl -fsSL https://raw.githubusercontent.com/michaelcontento/circleci-matrix/master/src/circleci-matrix.sh -o ~/.local/bin/circleci-matrix
           && chmod +x ~/.local/bin/circleci-matrix"

    override:
        - pip install -r requirements.txt
        - pip install -r dev-requirements.txt
        - python setup.py develop

        # Docker
        - if [[ -e ~/docker/postgresql.tar ]]; then docker load -i ~/docker/postgresql.tar; fi
        - if [[ -e ~/docker/solr.tar ]]; then docker load -i ~/docker/solr.tar; fi
        - if [[ -e ~/docker/ckan.tar ]]; then docker load -i ~/docker/ckan.tar; fi
        - docker build --rm=false -t postgresql ./contrib/docker/postgresql/
        - docker build --rm=false -t solr ./contrib/docker/solr/
        - docker pull redis:latest
        - docker build --rm=false -t ckan .
        - mkdir -p ~/docker; docker save postgresql > ~/docker/postgresql.tar
        - mkdir -p ~/docker; docker save solr > ~/docker/solr.tar
        - mkdir -p ~/docker; docker save redis:latest > ~/docker/redis.tar
        - mkdir -p ~/docker; docker save ckan > ~/docker/ckan.tar

    post:
        - "[ -e ~/nvm/v0.10.33/lib/node_modules/mocha-phantomjs ]
           || npm install -g mocha-phantomjs@3.5.0 phantomjs@~1.9.1"

    cache_directories:
        - ~/.local/bin/circleci-matrix
        - ~/nvm/v0.10.33/lib/node_modules/mocha-phantomjs
        - ~/nvm/v0.10.33/lib/node_modules/phantomjs
        - ~/nvm/v0.10.33/bin/mocha-phantomjs
        - ~/nvm/v0.10.33/bin/phantomjs
        - "~/docker"

database:

    post:
        - sudo -E -u postgres ./bin/postgres_init/1_create_ckan_db.sh
        - sudo -E -u postgres ./bin/postgres_init/2_create_ckan_datastore_db.sh
        - sed -i -e 's/.*datastore.read_url.*/ckan.datastore.read_url = postgresql:\/\/datastore_default:pass@\/datastore_test/' test-core.ini
        - paster datastore -c test-core.ini set-permissions | sudo -u postgres psql

        - cp -R /opt/solr-4.3.1 $SOLR_HOME
        - cd $SOLR_HOME/example; java -jar start.jar >> $HOME/solr.log:
            background: true
        - while ! grep "Started" $HOME/solr.log; do sleep 0.1; done
        - ./bin/solr_init/create_core.sh

        - paster db init -c test-core.ini

test:

    override:
        - circleci-matrix:
            parallel: true

    post:
        - paster serve test-core.ini:
            background: true
        - sleep 5
        - mocha-phantomjs http://localhost:5000/base/test/index.html

        # Docker
        - docker run -d --name db postgresql
        - docker run -d --name solr solr
        - docker run -d --name redis redis:latest
        - docker run -d --name ckan -p 5001:5000 --link db:db --link redis:redis --link solr:solr ckan
        - sleep 10
        - curl --retry 10 --retry-delay 5 -v http://localhost:5001

